{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["vals","a","i","length","j","Math","floor","random","shuffle","Square","props","state","clicked","handleClick","bind","handleChange","this","setState","Col","className","val","rows","placeholder","onChange","onClick","React","Component","BingoRow","first","rowNum","second","third","fourth","fifth","Row","App","id","style","Container","width","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+TAgBA,IAAIA,EAAO,CACV,SACA,WACA,sBACA,YACA,OACA,SACA,mBACA,wBACA,gBACA,YACA,oBACA,aACA,cACA,WACA,UACA,8BACA,WACA,iBACA,eACA,UACA,iBACA,QACA,SACA,cAhCD,SAAiBC,GAChB,IAAK,IAAIC,EAAID,EAAEE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACtC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADJ,EAEvB,CAACD,EAAEG,GAAIH,EAAEC,IAAvBD,EAAEC,GAFmC,KAE/BD,EAAEG,GAF6B,MAkCxCI,CAAQR,G,IAEFS,E,kDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAEC,SAAS,GACxB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAEnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALF,E,2DASS,IAAvBE,KAAKL,MAAMC,SACdI,KAAKC,SAAS,CAAEL,SAAS,M,qCAK1BI,KAAKC,SAAS,CAAEL,SAAS,M,+BAIzB,OAA2B,IAAvBI,KAAKL,MAAMC,QAEb,kBAACM,EAAA,EAAD,CAAKC,UAAU,kCACd,2BAAIH,KAAKN,MAAMU,KACf,8BAAUC,KAAK,IAAIC,YAAY,0BAA0BC,SAAUP,KAAKD,gBAKzE,kBAACG,EAAA,EAAD,CAAKC,UAAU,yCAAyCK,QAASR,KAAKH,aACrE,2BAAIG,KAAKN,MAAMU,KACf,8BAAUC,KAAK,IAAIC,YAAY,0BAA0BC,SAAUP,KAAKD,oB,GA/BxDU,IAAMC,WAsCrBC,E,uKAEJ,IAAIC,EAAQ5B,EAAyB,EAApBgB,KAAKN,MAAMmB,QACxBC,EAAS9B,EAAyB,EAApBgB,KAAKN,MAAMmB,OAAa,GACtCE,EAAQ/B,EAAyB,EAApBgB,KAAKN,MAAMmB,OAAa,GACrCG,EAAShC,EAAyB,EAApBgB,KAAKN,MAAMmB,OAAa,GACtCI,EAAQjC,EAAyB,EAApBgB,KAAKN,MAAMmB,OAAa,GASzC,OAP0B,IAAtBb,KAAKN,MAAMmB,SACdE,EAAQ,iEAEiB,IAAtBf,KAAKN,MAAMmB,SACdI,EAAQjC,EAAK,KAIb,kBAACkC,EAAA,EAAD,KACC,kBAAC,EAAD,CAAQd,IAAKQ,IACb,kBAAC,EAAD,CAAQR,IAAKU,IACb,kBAAC,EAAD,CAAQV,IAAKW,IACb,kBAAC,EAAD,CAAQX,IAAKY,IACb,kBAAC,EAAD,CAAQZ,IAAKa,S,GArBMR,IAAMC,WA2BhBS,EAAb,uKAEE,OACC,yBAAKhB,UAAU,qCACd,yBAAKA,UAAU,SACd,wBAAIA,UAAU,MAAMiB,GAAG,SAAvB,yBAGA,wBAAIC,MAAO,CAAC,cAAc,SAA1B,oEACA,wBAAIA,MAAO,CAAC,cAAc,SAA1B,4EAED,kBAACC,EAAA,EAAD,CAAWnB,UAAU,QACpB,kBAAC,EAAD,CAAUU,OAAQ,IAClB,kBAAC,EAAD,CAAUA,OAAQ,IAClB,kBAAC,EAAD,CAAUA,OAAQ,IAClB,kBAAC,EAAD,CAAUA,OAAQ,IAClB,kBAAC,EAAD,CAAUA,OAAQ,KAEnB,gCACC,wBAAIU,MAAM,QACV,4GApBL,GAAyBd,IAAMC,WClGXc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.174cd309.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport './bootstrap.min.css';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction shuffle(a) {\r\n\tfor (let i = a.length - 1; i > 0; i--) {\r\n\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t[a[i], a[j]] = [a[j], a[i]];\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nvar vals = [\r\n\t'A meme',\r\n\t'A selfie',\r\n\t'Photo with a filter',\r\n\t'An animal',\r\n\t'Food',\r\n\t'Nature',\r\n\t'Kode With Klossy',\r\n\t'Your favorite holiday',\r\n\t'Your hometown',\r\n\t'Mountains',\r\n\t'Sunrise or sunset',\r\n\t'Sunglasses',\r\n\t'Your school',\r\n\t'A bridge',\r\n\t'A sport',\r\n\t'A picture of textbook pages',\r\n\t'A banana',\r\n\t'A water bottle',\r\n\t'A screenshot',\r\n\t'Friends',\r\n\t'A random video',\r\n\t'Shoes',\r\n\t'A baby',\r\n\t'A rainbow'\r\n];\r\n\r\nshuffle(vals);\r\n\r\nclass Square extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { clicked: false };\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\thandleClick() {\r\n\t\tif (this.state.clicked === true) {\r\n\t\t\tthis.setState({ clicked: false });\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange() {\r\n\t\tthis.setState({ clicked: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.clicked === false) {\r\n\t\t\treturn (\r\n\t\t\t\t<Col className=\"d-flex flex-column square px-1\">\r\n\t\t\t\t\t<p>{this.props.val}</p>\r\n\t\t\t\t\t<textarea rows=\"2\" placeholder=\"did you find a picture?\" onChange={this.handleChange}></textarea>\r\n\t\t\t\t</Col>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<Col className=\"d-flex flex-column square clicked px-1\" onClick={this.handleClick}>\r\n\t\t\t\t\t<p>{this.props.val}</p>\r\n\t\t\t\t\t<textarea rows=\"2\" placeholder=\"did you find a picture?\" onChange={this.handleChange}></textarea>\r\n\t\t\t\t</Col>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass BingoRow extends React.Component {\r\n\trender() {\r\n\t\tvar first = vals[this.props.rowNum * 5];\r\n\t\tvar second = vals[this.props.rowNum * 5 + 1];\r\n\t\tvar third = vals[this.props.rowNum * 5 + 2];\r\n\t\tvar fourth = vals[this.props.rowNum * 5 + 3];\r\n\t\tvar fifth = vals[this.props.rowNum * 5 + 4];\r\n\r\n\t\tif (this.props.rowNum === 2) {\r\n\t\t\tthird = 'a group photo of community hour later tonight (Free aka You!)';\r\n\t\t}\r\n\t\tif (this.props.rowNum === 4) {\r\n\t\t\tfifth = vals[12];\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Square val={first} />\r\n\t\t\t\t<Square val={second} />\r\n\t\t\t\t<Square val={third} />\r\n\t\t\t\t<Square val={fourth} />\r\n\t\t\t\t<Square val={fifth} />\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class App extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App container text-center my-sm-3\">\r\n\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t<h1 className=\"asa\" id=\"title\">\r\n\t\t\t\t\t\t\tKWK Camera Roll Bingo\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<h6 style={{\"font-weight\":\"bold\"}}>Find a picture in your camera roll that is described by each box</h6>\r\n\t\t\t\t\t<h6 style={{\"font-weight\":\"bold\"}}>Drop a screenshot of your bingo in the #fun channel when you get bingo!</h6>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Container className=\"mb-3\">\r\n\t\t\t\t\t<BingoRow rowNum={0} />\r\n\t\t\t\t\t<BingoRow rowNum={1} />\r\n\t\t\t\t\t<BingoRow rowNum={2} />\r\n\t\t\t\t\t<BingoRow rowNum={3} />\r\n\t\t\t\t\t<BingoRow rowNum={4} />\r\n\t\t\t\t</Container>\r\n\t\t\t\t<footer>\r\n\t\t\t\t\t<hr width=\"80%\" />\r\n\t\t\t\t\t<p>Adapted by Wendy Su from Kimberly Gao who adapted from Phi Henry Nguyen</p>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}